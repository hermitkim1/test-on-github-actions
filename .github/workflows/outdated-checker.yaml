# This workflow will check if localized terms are outdated or not
# by comparing English terms in the old branch and the latest branch.
name: Outdated checker
on: 
  pull_request:
    paths:
      - 'content/**'
    branches:
      - 'dev-ko' # add other branche or use wildcard 'dev-**'

jobs:
  check-outdated:
    name: Check-outdated    
    
    # Condition to run this this workflow on the upstream repository
#     if: github.repository == 'cncf/glossary'

    # Condition to update the old dev-xx from the latest dev-xx or main
    # NOTE - "github.base_ref" refers to the old upstream/dev-xx
    # NOTE - "github.head_ref" refers to the latest forked/dev-xx or the latest upstream/main
    if: ${{ contains('dev-ko main', github.head_ref) }}
    
    runs-on: ubuntu-latest
#     permissions:
#       issues: write
    
    env:
      L10N_DIR: ./content/ko/ # Hmm.. I have no idea to gracefully handle pt-br and zh-cn yet ^^;;
    
    steps:
    - name: Checkout 
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # fetch all history for all tags and branches
        
    - name: Check outdated
      id: checker
      shell: bash
      run: |
        # (DEBUG) ###########################################
        ls -al
        git status
        git branch
        
        # Default environment variables 
        echo "GITHUB_REF: $GITHUB_REF"
        echo "Extract branch: ${GITHUB_REF#refs/}"
        
        # `github` context information
        echo "(DEBUG) github.ref: ${{github.ref}}"
        echo "(DEBUG) github.head_ref: ${{github.head_ref}}"
        echo "(DEBUG) github.base_ref: ${{github.base_ref}}"
        #####################################################
        
        # Set the lastest branch name from 'GITHUB_REF' 
        # The latest branch can be 'upstream/main' or 'forked/dev-ko' (reabsed)
        LATEST_BRANCH=${GITHUB_REF#refs/}
        echo "(DUBUG) LATEST_BRANCH: ${LATEST_BRANCH}"
        
        # Set the old branch from 'github.base_ref' 
        # The old branch can be 'upstream/dev-ko'
        OLD_BRANCH="origin/${{github.base_ref}}"
        echo "(DUBUG) OLD_BRANCH: ${OLD_BRANCH}"
        
        # Make an output directory
        mkdir outdated
                
        # Check outdated only if there is a localized term
        # Loop files in a localization directory, thus ${L10N_DIR} can be ./content/ko/
        for FILE in $(find ${L10N_DIR} -name '*.md'); do
            # ${MYVAR#pattern}: delete shortest match of pattern from the beginning
            FILE_NAME="${FILE#${L10N_DIR}}" 
            echo "(DEBUG) FILE_NAME: ${FILE_NAME}"
            echo "(DEBUG) Localized file path: $FILE"
            echo "(DEBUG) Original file path: ./content/en/${FILE_NAME}"            
            
            # Actually compare English terms and log diff in the file
            git diff ${LATEST_BRANCH}..${OLD_BRANCH} -- ./content/en/${FILE_NAME} > ./outdated/${FILE_NAME}
        done 
        
        ls -al ./outdated              
        
    - name: Upload result
      uses: actions/upload-artifact@v3
      with:
        name: dev-ko-outdated-checking-result
        path: ./outdated/

#     - name: Create an issue from file    
#       uses: peter-evans/create-issue-from-file@v4
#       with:
#         title: An example issue
#         content-filepath:  ${{ steps.checker.outputs.output_path }}
#         labels: |
#           outdated
#           lang/ko
